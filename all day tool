import time
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select

# Define the path to the ChromeDriver executable
chromedriver_path = "/Users/lucas/Downloads/chromedriver"

# Define the list of player names
player_names = [
    "Will Smith",
    "Anthony Rizzo",
    "Jose Altuve",
    "Christopher Morel",
    "Dansby Swanson",
    "Adolis Garcia",
    "Ian Happ",
    "Michael Harris II",
    "Jorge Soler",
    "Fernando Tatis Jr.",
    "Jake Fraley",
    "Christian Walker",
    "Andres Gimenez",
    "Matt Chapman",
    "Justin Turner",
    "Tommy Edman",
    "Luis Matos",
    "Jake McCarthy"
]

# Set up Selenium options and Chrome driver
options = Options()
options.add_argument("--headless")  # Run Chrome in headless mode
service = Service(chromedriver_path)
driver = webdriver.Chrome(service=service, options=options)

# Load the page
url = "https://www.numberfire.com/mlb/daily-fantasy/daily-baseball-projections/batters"
driver.get(url)

# Wait for the dropdown menu to be interactable
dropdown_element = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.CSS_SELECTOR, "select[name='slate_id']"))
)

# Find all iframe elements
iframes = driver.find_elements(By.TAG_NAME, 'iframe')

# Check if there are any iframes
if len(iframes) > 0:
    # Switch to the first iframe
    driver.switch_to.frame(iframes[0])

# Create a Select object from the dropdown element
dropdown = Select(dropdown_element)

# Select the "All Day" option by value
dropdown.select_by_value("419931")

# Switch back to the default content if an iframe was present
if len(iframes) > 0:
    driver.switch_to.default_content()

# Wait for the updated player list to load
time.sleep(2)  # Adjust the sleep time if necessary

# Get the updated HTML content
html_content = driver.page_source
driver.quit()

# Parse the HTML with BeautifulSoup
soup = BeautifulSoup(html_content, 'html.parser')

# Find all rows in the table
rows = soup.find_all('tr', class_='')

# Initialize an empty list to store player information
player_info = []

# Loop through each row
for row in rows:
    # Find the player name, position, and fantasy points elements
    name_element = row.find(class_=['abbrev', 'full'])
    position_element = row.find(class_='player-info--position')
    fantasy_points_element = row.find(class_='fp active')

    # Extract the player name, position, and fantasy points
    player_name = name_element.text.strip() if name_element else ''
    player_position = position_element.text.strip() if position_element else ''
    fantasy_points = float(fantasy_points_element.text.strip()) if fantasy_points_element else 0.0

    # Check if the player is in our list
    if player_name in player_names:
        # Append the player information to the list
        player_info.append({'name': player_name, 'position': player_position, 'fantasy_points': fantasy_points})


# Sort the player information by fantasy points in descending order
sorted_player_info = sorted(player_info, key=lambda x: x['fantasy_points'], reverse=True)

# Print the player information
for player in sorted_player_info:
    print(f"Player: {player['name']}, Position: {player['position']}, Fantasy Points: {player['fantasy_points']}")
